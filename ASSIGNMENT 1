import numpy as np
import matplotlib.pyplot as plt

# lengths of domains
Lx = 1.0 
Ly = 1.0 

# gridpoints and spacing
Nx = 50 
Ny = 50 
dx = Lx / (Nx - 1) 
dy = Ly / (Ny - 1) 

epsilon = 1.0     # Permittivity of free space

def rho(x, y):
    return np.exp(-((x - 0.5)**2 / 0.01 + (y - 0.5)**2 / 0.01))

phi = np.zeros((Nx, Ny))

# Boundary conditions
phi[:, 0] = 0 
phi[:, -1] = 0 
phi[0, :] = 0 
phi[-1, :] = 0 

max_iter = 10000
tolerance = 1e-6

for iteration in range(max_iter):
    phi_old = phi.copy()

    for i in range(1, Nx - 1):
        for j in range(1, Ny - 1):
            x = i * dx
            y = j * dy
            phi[i, j] = 0.25 * (
                phi_old[i + 1, j] + phi_old[i - 1, j] +
                phi_old[i, j + 1] + phi_old[i, j - 1] +
                dx**2 * rho(x, y) / epsilon
            )

    # Checking for convergence
    if np.max(np.abs(phi - phi_old)) < tolerance:
        print(f"Converged after {iteration} iterations.")
